sd(c(5,8,12))
which.min(c(4,1,6))
Sys.setlocale("LC_ALL","C")
q()
Sys.setlocale("LC_ALL","C")
help.start()
q()
getwd()
getwd()
setwd("D:")
getwd
getwd()
setwd("D:Lectures/coursera/R")
setwd("D:/Lectures/Coursera/Rprogramming/")
getwd()
load("D:/Lectures/Coursera/Rprogramming/.RData")
setwd("~/")
getwd()
setwd("D:/Lectures/Coursera/Rprogramming/")
load("D:/Lectures/Coursera/Rprogramming/.RData")
load("D:/Lectures/Coursera/Rprogramming/swirl.RData")
for(i in 1:10){}
for(i in 1:10){
print(i)
}
x <- c("a", "b", "c", "d")
for (i in 1:4){
print(x[i])
}
for (i seq_along(x)){
print(x[i])
}
for (i in seq_along(x)){
print(x[i])
}
for (letter in x){
print(letter)
}
for (i in 1:4) print(x[i])
save.image("D:/Lectures/Coursera/Rprogramming/lecture02_practice/lecture02.RData")
setwd(~/lecture02)
setwd("~/lecture02")
getwd()
setwd
setwd(getwd()/"lecture02")
setwd("D:/Lectures/Coursera/Rprogramming/lecture02_practice/")
load("D:/Lectures/Coursera/Rprogramming/lecture02_practice/lecture02.RData")
x <- matrix(1:6, 2, 3)
for (i in seq_len(nrow(x))){
for(j in seq_len(ncol(x))){
print(x[i, j])
}
}
save()
save.image(file = "lecture02.RData")
savehistory(file = "lecture02.Rhistory")
x
count <- 0
while(count < 0){
print(count)
}
while(count < 0){
print(count)
count <- count + 1
}
while(count < 10){
print(count)
count <- count + 1
}
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1, 1, 0.5)
if (coin == 1){
z <- z + 1
} else {
z <- z -1
}
}
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1, 1, 0.5)
if (coin == 1){
z <- z + 1
} else {
z <- z -1
}
}
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1, 1, 0.5)
if (coin == 1){
z <- z + 1
} else {
z <- z -1
}
}
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1, 1, 0.5)
if (coin == 1){
z <- z + 1
} else {
z <- z -1
}
}
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1, 1, 0.5)
if (coin == 1){
z <- z + 1
} else {
z <- z -1
}
}
savehistory(file = "lecture02.Rhistory")
add2 <- function(x, y){
x + y
}
add2(5, 3)
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x, n){
use <- x > n
x[use]
}
x <- 1:20
above(x)
above(x, 20)
above(x, 18)
above <- function(x, n=10){
use <- x > n
x[use]
}
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means [i] <- mean(y[, i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means [i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data/")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
quit()
